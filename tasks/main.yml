---
#####################################
### Create service users
#####################################

- name: Create service users
  microsoft.ad.user:
    name: '{{ item }}'
    password: '{{ dc_password_service }}'
    state: present
    path: '{{ dc_ou_accounts_service }}'
    password_never_expires: true
    update_password: always
    user_cannot_change_password: true
  with_items: '{{ dc_user_service }}'
  when: dc_user_service is defined

#####################################
### Create standard users statically
#####################################

- name: Create standard users statically
  microsoft.ad.user:
    name: '{{ item }}'
    password: '{{ dc_password_user }}'
    state: present
    path: '{{ dc_ou_accounts_user }}'
    password_never_expires: true
    update_password: always
    user_cannot_change_password: true
  with_items: '{{ dc_user_standard }}'
  when: dc_user_standard is defined

#####################################
### Create standard users dynamically - the dT way
#####################################

- name: Create standard users dynamically - the dT way
  microsoft.ad.user:
    name: "{{ item.0 | replace('##', item.1) }}"
    password: '{{ dc_password_user }}'
    state: present
    path: "{{ dc_ou_accounts_user | replace('##', item.1) }}"
    password_never_expires: true
    update_password: always
    user_cannot_change_password: true
  with_nested:
  - '{{ dc_user_standard_dynamic }}'
  - '{{ range(1, dc_domain_count + 1, 1) | list }}'
  when: dc_user_standard_dynamic_dt is defined

#####################################
### Create standard users dynamically
#####################################

- name: Create standard users dynamically
  microsoft.ad.user:
    name: "{{ dc_user_standard_dynamic.base_first_name }} {{ dc_user_standard_dynamic.base_last_name }} {{ item }}" # e.g., Test User 1
    firstname: "{{ dc_user_standard_dynamic.base_first_name }}"
    surname: "{{ dc_user_standard_dynamic.base_last_name }}"
    upn: "{{ dc_user_standard_dynamic.base_first_name | lower | first }}{{ dc_user_standard_dynamic.base_last_name | lower }}{{ item }}@{{ dc_domain_name }}"
    path: "{{ dc_user_standard_dynamic.ou_path }}" # Distinguished Name of the OU
    password: "{{ dc_password_user }}"
    enabled: true
    state: present
  loop: "{{ range(1, dc_user_standard_dynamic.user_count + 1) | list }}" # Loop from 1 to user_count (inclusive)
  register: new_users_result
  when: dc_user_standard_dynamic is defined

#####################################
### Create a random number of standard users dynamically
#####################################

- name: Generate a random number of users to create (run_once)
  ansible.builtin.set_fact:
    num_users_to_create: "{{ range(dc_user_standard_dynamic_random.min_users, dc_user_standard_dynamic_random.max_users + 1) | random }}"
  when: dc_user_standard_dynamic_random is defined

- name: Debug the number of users to create
  ansible.builtin.debug:
    msg: "Creating {{ num_users_to_create }} users."
  when: dc_user_standard_dynamic_random is defined

- name: Prepare user data for loop (ensure all components are strings)
  ansible.builtin.set_fact:
    user_data_for_loop: >
      {% set users = [] %}
      {% for i in range(1, (num_users_to_create | int) + 1) %}
      {%   set current_seed = (ansible_play_batch | join('-')) + (i | string) %}
      {%   set random_num = (10000 | random(seed=current_seed)) %}
      {%   set users = users + [{
            'index': i | string,
            'random_suffix': random_num | string,
            'full_name': dc_user_standard_dynamic_random.first_name_prefix + (i | string)
          }] %}
      {% endfor %}
      {{ users }}
  when: dc_user_standard_dynamic_random is defined

- name: Debug raw string output of user data
  ansible.builtin.debug:
    var: user_data_for_loop_raw_string
    verbosity: 0 # Show this always with -vvv
  when: dc_user_standard_dynamic_random is defined
  
- name: Convert raw string to list
  ansible.builtin.set_fact:
    user_data_for_loop: "{{ user_data_for_loop_raw_string | from_yaml }}" # Use from_yaml for robustness
  when: dc_user_standard_dynamic_random is defined
  
- name: Debug prepared user data (final list)
  ansible.builtin.debug:
    var: user_data_for_loop
    verbosity: 2 # Show this only with -vv or higher
  when: dc_user_standard_dynamic_random is defined
  
- name: Create Active Directory users
  microsoft.ad.user:
    name: "{{ item.full_name }}"        # Use the pre-prepared full_name string
    firstname: "{{ dc_user_standard_dynamic_random.first_name_prefix }}"
    surname: "{{ item.random_suffix }}" # This is already a string now
    password: "{{ dc_password_user }}"
    enabled: true
    state: present
    path: "{{ dc_user_standard_dynamic_random.ou_path }}"
  loop: "{{ user_data_for_loop }}" # Loop directly over the prepared list
  loop_control:
    label: "Creating user {{ item.full_name }}" # More descriptive label
  when: dc_user_standard_dynamic_random is defined
