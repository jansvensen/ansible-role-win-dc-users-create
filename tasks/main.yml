---
#####################################
### Create service users
#####################################

- name: Create service users
  microsoft.ad.user:
    name: '{{ item }}'
    password: '{{ dc_password_service }}'
    state: present
    path: '{{ dc_ou_accounts_service }}'
    password_never_expires: true
    update_password: always
    user_cannot_change_password: true
  with_items: '{{ dc_user_service }}'
  when: dc_user_service is defined

#####################################
### Create standard users statically
#####################################

- name: Create standard users statically
  microsoft.ad.user:
    name: '{{ item }}'
    password: '{{ dc_password_user }}'
    state: present
    path: '{{ dc_ou_accounts_user }}'
    password_never_expires: true
    update_password: always
    user_cannot_change_password: true
  with_items: '{{ dc_user_standard }}'
  when: dc_user_standard is defined

#####################################
### Create standard users dynamically - the dT way
#####################################

- name: Create standard users dynamically - the dT way
  microsoft.ad.user:
    name: "{{ item.0 | replace('##', item.1) }}"
    password: '{{ dc_password_user }}'
    state: present
    path: "{{ dc_ou_accounts_user | replace('##', item.1) }}"
    password_never_expires: true
    update_password: always
    user_cannot_change_password: true
  with_nested:
  - '{{ dc_user_standard_dynamic }}'
  - '{{ range(1, dc_domain_count + 1, 1) | list }}'
  when: dc_user_standard_dynamic_dt is defined

#####################################
### Create standard users dynamically
#####################################

- name: Create standard users dynamically
  microsoft.ad.user:
    name: "{{ dc_user_standard_dynamic.base_first_name }} {{ dc_user_standard_dynamic.base_last_name }} {{ item }}" # e.g., Test User 1
    firstname: "{{ dc_user_standard_dynamic.base_first_name }}"
    surname: "{{ dc_user_standard_dynamic.base_last_name }}"
    upn: "{{ dc_user_standard_dynamic.base_first_name | lower | first }}{{ dc_user_standard_dynamic.base_last_name | lower }}{{ item }}@{{ dc_domain_name }}"
    path: "{{ dc_user_standard_dynamic.ou_path }}" # Distinguished Name of the OU
    password: "{{ dc_password_user }}"
    enabled: true
    state: present
  loop: "{{ range(1, dc_user_standard_dynamic.user_count + 1) | list }}" # Loop from 1 to user_count (inclusive)
  register: new_users_result
  when: dc_user_standard_dynamic is defined

#####################################
### Create a random number of standard users dynamically
#####################################

- name: Generate a random number of users to create (run_once)
  ansible.builtin.set_fact:
    num_users_to_create: "{{ range(dc_user_standard_dynamic_random.min_users, dc_user_standard_dynamic_random.max_users + 1) | random }}"
  when: dc_user_standard_dynamic_random is defined

- name: Debug the number of users to create
  ansible.builtin.debug:
    msg: "Creating {{ num_users_to_create }} users."
  when: dc_user_standard_dynamic_random is defined

- name: Create a random number of standard users dynamically
  microsoft.ad.user:
    name: "{{ dc_user_standard_dynamic_random.first_name_prefix }}{{ item.index }}" # e.g., AnsibleUser1, AnsibleUser2
    firstname: "{{ dc_user_standard_dynamic_random.first_name_prefix }}"
    surname: "{{ item.random_suffix }}" # The random number as surname
    password: "{{ dc_password_user }}"
    enabled: true
    state: present
    path: "{{ dc_user_standard_dynamic_random.ou_path }}"
  loop: "{{ range(1, num_users_to_create + 1) | product([]) | list }}" # Create a list of numbers from 1 to num_users_to_create
  loop_control:
    loop_var: user_item # Custom loop variable name for clarity
  vars:
    # Generate a new random number for each user's surname
    user_item:
      index: "{{ user_item.0 }}" # Extract the number from the range
      random_suffix: "{{ 10000 | random(seed=ansible_play_batch + user_item.0 | string) }}" 
      # The 'random' filter with a seed ensures reproducibility within a play if you rerun, 
      # but different numbers for each user.
      # We concatenate 'ansible_play_batch' (which is constant for a given play run) 
      # with 'user_item.0' (the user index) for a unique seed per user.
        # 10000 | random will generate a number between 0 and 9999.
  when: dc_user_standard_dynamic_random is defined
